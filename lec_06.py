# -*- coding: utf-8 -*-
"""Lec 06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KmdgmMe6McITm5QfYGo8POCVoIzs4Z_F
"""

#Function
def printname():
  name = input("put your name: ")
  print("Hello!",name)
printname()

def findMax ():
  num1 = int(input("Enter a number 1: "))
  num2 = int(input("Enter a number 2: "))
  num3 = int(input("Enter a number 3: "))
  if num1>num2:
    if num1>num3:
      print("The max number is: ",num1)
    else:
      print("The max number is : ",num3)
  else:
    if num2>num3:
      print("The max number is : ",num2)
    else:
      print("The max number is: ",num3)
findMax()

#Multiplication table in reverse mode

def multiplication_table ():
  n = int(input("Enter number to get the multiplication table: "))
  for i in range (10,0,-1):
    print(f"{n} * {i} = {n*i}")

multiplication_table()

def reverse_number ():
  n = input("Enter a number to reverse: ")
  reversed_n = str(n[::-1])
  print(f"Reversed number: {reversed_n}")

reverse_number()

# default parameter:
def message(str1 ='Hi' , str2 = 'Alice'):
  print(str1, "Hello Mr",str2)
message ("hello MS str1", " Cheerry")

def area_circle(r : float):
  print(f" {3.1416} * {r} = {3.1416 * r}")
def area_square(S : float ):
  print(f"{S} * {S} = {S*S}")
area_circle(10)
area_square(10)

def is_count(sentence : str):
  length = len(sentence)
  count = 0
  for i in sentence:
    if i.isalnum():
      count+=1
  print(count)
is_count("Good and ")

def percentage_cal(n : float, total : float):
  print(f"({n} / {total}) * 100 = {(n/total)*100}%")
percentage_cal(10,100)

def average_cal():
    count = 0  # To track the number of valid inputs
    total_sum = 0  # To accumulate the sum of valid inputs

    while True:
        user_input = input("Enter number (or type 'done' to finish): ")

        if user_input.lower() == 'done':
            # If no numbers were entered, exit early
            if count == 0:
                print("No numbers were entered.")
                return  # Exit the function early if no valid numbers
            break  # Exit the loop when user types 'done'

        try:
            # Convert the user input to a float and add it to the sum
            number = float(user_input)
            total_sum += number
            count += 1
        except ValueError:
            # Handle invalid input
            print("Invalid input. Please enter a valid number.")

    # After the loop ends, calculate and print the average
    average = total_sum / count
    print(f"The average of the entered numbers is: {average:.2f}")

# Call the function to test it
average_cal()
3

def is_alphanumeric():
  user_input = input("Enter data: ")
  length = len(user_input)
  user_input = user_input.strip()
  if(length>=8 and length<=20):
    if user_input.isalnum():
      print("valid input , no special character. ")
    else:
      print("Invalid input, Special character entered. ")
  else:
    print("Invalid size. ")
is_alphanumeric()

def username ( name ):
  correctedness = True
  for char in name :
    if not char.isalnum():
      correctedness = False
    if len(name) <8 and len(name )>= 20:
      correctedness = False
      return correctedness
  return correctedness
if username("sdfssdsdsdsdfddfdfdfdfsasd"):
  print('correct')
else :
  print("Not correct")

show_name = lambda name: print("hi,",name)
show_name("Faisal")

sum_ = lambda a,b : a+b
print(sum_(4,5))

sum_ = lambda a,b,c : a+b+c
print(sum_(1,2,3))

Full_name = lambda F_N,L_N : print(F_N,L_N)
first_name = input("Enter first name: ")
last_name = input("Enter last name: ")
Full_name(first_name,last_name)

NUMBERS = [2,3,4,5]
def square(x):
  return x*x
squared_number = map (square,NUMBERS)
sql = list(squared_number)
print(sql)

NUMBERS = [2,3,4,5]
squared_number = list(map (lambda x: x*x,NUMBERS))

print(sql)

NUMBERS = [2,3,4,5]
NUMBERS2 = [1,2,1,2]
summation_number = list(map (lambda x, Y : x + Y,NUMBERS,NUMBERS2))
print(summation_number)

numbers = [1,2,3,4,5,6]
def isEven(x):
  if x % 2 == 0:
    return True
  else:
    return False
even_number = list(filter(isEven,numbers))
print(even_number)

numbers = [1,2,3,4,5,6]

even_number = list(filter(lambda x : x%2==0 ,numbers))
print(even_number)

numbers = [1,2,3,4,5,6]

odd_number = list(filter(lambda x : x%2==1 ,numbers))
print(odd_number)